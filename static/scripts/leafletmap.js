//-- leaflet map script --//var layerESRI = L.esri.basemapLayer('Topographic').addTo(map);var layerLabels;var map = L.map('map').setView([39.8282, -98.5795],8);var layerESRI = L.esri.basemapLayer('Topographic').addTo(map);var huc8Layer = L.geoJson(huc8s, {            style: hucStyle,            onEachFeature: onEachFeature        }).addTo(map);//L.control.layers(huc8Layer).addTo(map);//L.control.layers(streamNetwork).addTo(map);//var overlayStream = {"Stream Network":streamNetwork};//var overlayHUC8 = {"Stream Network":huc8Layer};//var controlStreamNetwork = L.control.layers(overlayStream, overlayHUC8).addTo(map);//var controlHUC8 = L.control.layers(huc8Layer).addTo(map);function setBasemap(basemap) {    if (layerESRI) {        map.removeLayer(layerESRI);    }    layerESRI = L.esri.basemapLayer(basemap);    map.addLayer(layerESRI);    if (layerLabels) {        map.removeLayer(layerLabels);    }    if (basemap === 'ShadedRelief' || basemap === 'Imagery' || basemap === 'Terrain') {        layerLabels = L.esri.basemapLayer(basemap + 'Labels');        map.addLayer(layerLabels);    }}//var layerHUC8Control = L.control.layers(huc8Layer).addTo(map);function changeBasemap(basemaps) {    var basemap = basemaps.value;    setBasemap(basemap);}//map search functionvar arcgisOnline = L.esri.Geocoding.arcgisOnlineProvider();var searchControl = L.esri.Geocoding.geosearch({    providers: [      arcgisOnline,      L.esri.Geocoding.featureLayerProvider({          url: 'https://services.arcgis.com/uCXeTVveQzP4IIcx/arcgis/rest/services/gisday/FeatureServer/0/',          searchFields: ['Name', 'Organization'],          label: 'GIS Day Events',          bufferRadius: 5000,          formatSuggestion: function(feature){              return feature.properties.Name + ' - ' + feature.properties.Organization;          }      })    ]}).addTo(map);//on map click, pop-up lat long info/*var popup = L.popup();function onMapClick(e) {    popup        .setLatLng(e.latlng)        .setContent(e.latlng.toString())        .openOn(map);}map.on('click', onMapClick);*///resize leaflet map based on window/div size/*$(window).on("resize", function() {    $("#introText")	.height($("#mapDiv").height());	map.invalidateSize()}).trigger("resize");*/var hucStyle = {            "color": "#000000",            "weight": 2,            "opacity": 0.9,            "fillOpacity": 0.0,            "fillColor": "33FFFF"};function selectHUCs(hucs){    resetHUCLayer();    huc8Layer.eachLayer(function (layer) {        if (hucs == layer.feature.properties.HUC_CODE)            layer.setStyle({ fillColor: 'blue', fillOpacity: 0.8 })        });}function getHUCFishData(hucs){    var url = "/fishhucs/" + hucs;    $.ajax({        type:"GET",        url: url,        dataType: "json",        success: function(data, status, jqXHR) {            initDT(fish_by_huc_columns, data);            return data;        },        error: function(jqXHR, status) {            return null;        }    })}function resetHUCLayer(){    huc8Layer.eachLayer(function (layer) {        huc8Layer.resetStyle(layer);    });}//Setup on click method for each huc8 featurefunction onEachFeature(feature, layer) {    layer.on('click', function (e) {        selectHUCs(feature.properties.HUC_CODE);        var data = getHUCFishData(feature.properties.HUC_CODE);        //initDT(fish_by_huc_columns, data);        //alert(e.latlng.toString());    });}//resize leaflet map based on window/div size$(window).on("resize", function() {    $("#map")    .height($("#mapDiv").height()*.8)    .width($("#mapDiv").width()*.95)    $("#basemaps-wrapper")    .width($("#mapDiv").width()*.95)    map.invalidateSize()}).trigger("resize");